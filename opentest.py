import openpyxl
from openpyxl import Workbook
from openpyxl.worksheet.table import Table, TableStyleInfo
from tkinter import *
from tkinter import *

import tkinter
import tkinter.ttk



#
#
# from openpyxl import Workbook
# from openpyxl.worksheet.table import Table, TableStyleInfo
#
# wb = Workbook()
# ws = wb.active
#
# data = [
#     ['Apples', 10000, 5000, 8000, 6000],
#     ['Pears',   2000, 3000, 4000, 5000],
#     ['Bananas', 6000, 6000, 6500, 6000],
#     ['Oranges',  500,  300,  200,  700],
# ]
#
# # add column headings. NB. these must be strings
# ws.append(["Fruit", "2011", "2012", "2013", "2014"])
# for row in data:
#     ws.append(row)
#
# tab = Table(displayName="Table1", ref="A1:E5")
#
# # Add a default style with striped rows and banded columns
# style = TableStyleInfo(name="TableStyleMedium9", showFirstColumn=False,
#                        showLastColumn=False, showRowStripes=True, showColumnStripes=True)
# tab.tableStyleInfo = style
#
# '''
# Table must be added using ws.add_table() method to avoid duplicate names.
# Using this method ensures table name is unque through out defined names and all other table name.
# '''
# ws.add_table(tab)
# wb.save("table.xlsx")

# -------------------------------------------------------------------------

#https://076923.github.io/posts/Python-tkinter-30/
window = tkinter.Tk()
window.title("YUN DAE HEE")
window.geometry("640x400+100+100")
window.resizable(False, False)


def cc(self):
    treeview.tag_configure("tag2", background="red")


treeview = tkinter.ttk.Treeview(window, columns=["one", "two"], displaycolumns=["one", "two"])
treeview.pack()

treeview.column("#0", width=30)
treeview.heading("#0", text="num")

treeview.column("one", width=30, anchor="center")
treeview.heading("one", text="문자", anchor="e")

treeview.column("#2", width=100, anchor="w")
treeview.heading("two", text="ASCII", anchor="center")


treelist = [("A", 65), ("B", 66), ("C", 67), ("D", 68), ("E", 69)]

for i in range(len(treelist)):
    treeview.insert('', 'end', text=i, values=treelist[i], iid=str(i) + "번")

top = treeview.insert('', 'end', text=str(len(treelist)), iid="5번", tags="tag1")
top_mid1 = treeview.insert(top, 'end', text="5-2", values=["SOH", 1], iid="5번-1")
top_mid2 = treeview.insert(top, 0, text="5-1", values=["NUL", 0], iid="5번-0", tags="tag2")
top_mid3 = treeview.insert(top, 'end', text="5-3", values=["STX", 2], iid="5번-2", tags="tag2")

treeview.tag_bind("tag1", sequence="<<TreeviewSelect>>", callback=cc)

window.mainloop()
# -------------------------------------------------------------------------
# #테이블 만들기
# class Table:
#
#     def __init__(self, root):
#         # code for creating table
#         for i in range(total_rows):
#             for j in range(total_columns):
#                 self.e = Entry(root, width=12, fg='white',
#                                font=('Arial', 10, 'bold'))
#
#                 self.e.grid(row=i, column=j)
#                 self.e.insert(END, lst[i][j])
#
# def og_list():
#     row = []
#     for i in range(1, 41):
#         for j in range(1, 8):
#             row.append(str(ws_data.cell(row=i, column=j).value))
#         lst.append(row)
#         row = []
#
# oglist=[]
#
#     #원본 시트 사용
# home = "/Users/doungukkim/Desktop/workspace/python/restinpeace/excelhere/test.xlsx" #기본 물품 엑셀 위치 저장
# wb = openpyxl.load_workbook(home,data_only=True) #함수 그대로
# ws_data = wb['Sheet1'] #사용 시트 지정
# lst = []
# og_list()
#
# # take the data
#
#
#
# # find total number of rows and
# # columns in list
# total_rows = len(lst)
# total_columns = len(lst[0])
#
# # create root window
# root = Tk()
# t = Table(root)
# root.mainloop()
# # -------------------------------------------------------------------------


#사용되는 셀의 데이터
# data = [
#     ['Apples', 10000, 5000, 8000, 6000],
#     ['Pears',   2000, 3000, 4000, 5000],
#     ['Bananas', 6000, 6000, 6500, 6000],
#     ['Oranges',  500,  300,  200,  700],
# ]
#
# # add column headings. NB. these must be strings
# ws.append(["Fruit", "2011", "2012", "2013", "2014"])
# for row in data:
#     ws.append(row)
#
# tab = Table(displayName="Table1", ref="A1:E5")
#
# # Add a default style with striped rows and banded columns
# style = TableStyleInfo(name="TableStyleMedium9", showFirstColumn=False,
#                        showLastColumn=False, showRowStripes=True, showColumnStripes=True)
# tab.tableStyleInfo = style
#
# '''
# Table must be added using ws.add_table() method to avoid duplicate names.
# Using this method ensures table name is unque through out defined names and all other table name.
# '''
# ws.add_table(tab)
# # wb.save("table.xlsx")
